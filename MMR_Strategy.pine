//@version=5
strategy("MMR Strategy V2", overlay=true, default_qty_type=strategy.percent_of_equity, default_qty_value=100)

// Input parameters
fast_drop_threshold = input.float(-20.0, "Fast Drop Threshold (%)", maxval=-10.0, step=0.5)
medium_drop_threshold = input.float(0.4, "Medium Drop Threshold (TQQQ from 100d high)", minval=0.3, maxval=0.6, step=0.01)
sma_below_threshold = input.float(0.90, "SMA Below Threshold", minval=0.8, maxval=1.0, step=0.01)
sma_buy_threshold = input.float(1.05, "SMA Buy Threshold", minval=1.0, maxval=1.15, step=0.01)
sma_recovery_threshold = input.float(0.95, "SMA Recovery Threshold", minval=0.9, maxval=1.0, step=0.01)
slow_drop_sma_30d_threshold = input.float(0.8, "Slow Drop 30d SMA Threshold", minval=0.7, maxval=0.9, step=0.01)
slow_drop_sma_5d_threshold = input.float(0.75, "Slow Drop 5d SMA Threshold", minval=0.6, maxval=0.8, step=0.01)
grow_fast_sma_threshold = input.float(1.15, "Grow Fast SMA Threshold", minval=1.1, maxval=1.3, step=0.01)
grow_fast_percentage = input.float(0.85, "Grow Fast Percentage", minval=0.7, maxval=1.0, step=0.01)

// Always get QQQ and TQQQ data for signals
qqq_close = request.security("QQQ", timeframe.period, close)
qqq_close_prev = request.security("QQQ", timeframe.period, close[1])
tqqq_close = request.security("TQQQ", timeframe.period, close)
tqqq_close_prev = request.security("TQQQ", timeframe.period, close[1])
vix_close = request.security("VIX", timeframe.period, close)

// Calculate SMAs using QQQ and TQQQ data
sma200_qqq = ta.sma(qqq_close, 200)
sma200_tqqq = ta.sma(tqqq_close, 200)

// Calculate daily rates
qqq_daily_rate = (qqq_close - qqq_close_prev) / qqq_close_prev * 100
tqqq_daily_rate = (tqqq_close - tqqq_close_prev) / tqqq_close_prev * 100

// Signal state variables
var string signal_state = "WaitingForRecovery"  // Initial state
var int days_in_waiting_small_drop = 0
var bool was_recently_recovering = false

// Drop detection logic
fastDrop = tqqq_daily_rate < fast_drop_threshold

// Medium drop: TQQQ pullback from 100-day high (updated logic)
tqqq_100d_high = ta.highest(tqqq_close, 100)
tqqq_pullback_ratio = tqqq_close / tqqq_100d_high
mediumDrop = tqqq_pullback_ratio < medium_drop_threshold

// Slow drop: TQQQ below SMA*0.8 for 30 days AND below SMA*0.75 for 5 days (updated logic)
below_sma_30d = true
for i = 0 to 29
    if tqqq_close[i] >= sma200_tqqq[i] * slow_drop_sma_30d_threshold
        below_sma_30d := false
        break

below_sma_5d = true
for i = 0 to 4
    if tqqq_close[i] >= sma200_tqqq[i] * slow_drop_sma_5d_threshold
        below_sma_5d := false
        break

slowDrop = below_sma_30d and below_sma_5d

// Growth detection: TQQQ above SMA*1.15 for 85% of last 30 days (updated logic)
above_threshold_count = 0
for i = 0 to 29
    if tqqq_close[i] >= sma200_tqqq[i] * grow_fast_sma_threshold
        above_threshold_count := above_threshold_count + 1

is_above_sma_for_a_while = above_threshold_count / 30.0 >= grow_fast_percentage

// Track if we were recently in recovery state
if signal_state == "WaitingForRecovery"
    was_recently_recovering := true

// Growth too fast condition
growTooFast = is_above_sma_for_a_while and not was_recently_recovering

// SMA threshold conditions (using QQQ for buy/sell decisions)
isBelow90SMA200 = qqq_close < sma200_qqq * sma_below_threshold
isBelow95SMA200 = qqq_close < sma200_qqq * sma_recovery_threshold
isAbove105SMA200 = qqq_close >= sma200_qqq * sma_buy_threshold

// Long position check
inMarket = strategy.position_size > 0

// State machine logic for signal transitions
var string next_signal_state = signal_state
var int signal = 0  // 0 = hold, 1 = buy, -1 = sell

// Track days in waiting for small drop state
if signal_state == "WaitingForSmallDrop"
    days_in_waiting_small_drop := days_in_waiting_small_drop + 1
else
    days_in_waiting_small_drop := 0

// Check if waiting for small drop too long (60 days)
waitingForSmallDropForTooLong = days_in_waiting_small_drop >= 60

// State transitions
if signal_state == "Buy"
    next_signal_state := "Hold"
    signal := 1
else if signal_state == "Hold"
    if fastDrop or mediumDrop or slowDrop or growTooFast
        next_signal_state := "Sell"
        signal := -1
    else
        next_signal_state := "Hold"
        signal := 0
else if signal_state == "Sell"
    if growTooFast
        next_signal_state := "WaitingForSmallDrop"
    else
        next_signal_state := "WaitingForDrop"
    signal := -1
else if signal_state == "WaitingForSmallDrop"
    if slowDrop or mediumDrop or fastDrop
        next_signal_state := "WaitingForDrop"
    else if isBelow95SMA200
        next_signal_state := "WaitingForRecovery"
    else if waitingForSmallDropForTooLong and not growTooFast
        next_signal_state := "Buy"
        signal := 1
    else
        next_signal_state := "WaitingForSmallDrop"
    signal := 0
else if signal_state == "WaitingForDrop"
    if isBelow90SMA200
        next_signal_state := "WaitingForRecovery"
    else
        next_signal_state := "WaitingForDrop"
    signal := 0
else if signal_state == "WaitingForRecovery"
    if isAbove105SMA200
        next_signal_state := "Buy"
        signal := 1
        was_recently_recovering := false  // Reset recovery flag when buying
    else
        next_signal_state := "WaitingForRecovery"
    signal := 0

// Update signal state
signal_state := next_signal_state

// Execute trades based on signal
if signal == 1 and strategy.position_size == 0
    strategy.entry("Long", strategy.long)
    
if signal == -1 and strategy.position_size > 0
    strategy.close("Long")


// // VIX high volatility marker when VIX > 30
// plotshape(vix_close > 30, title="High VIX", location=location.top, color=color.purple, style=shape.circle, size=size.tiny)

// Plot SMA200 lines
plot(sma200_tqqq * 1.05, "TQQQ SMA 200", color=color.green, linewidth=1)
plot(sma200_tqqq, "TQQQ SMA 200", color=color.navy, linewidth=1)
plot(sma200_tqqq * 0.95, "TQQQ SMA 200", color=color.red, linewidth=1)

// Plot buy/sell signals
plotshape(signal == 1, title="Buy Signal", location=location.belowbar, color=color.green, style=shape.triangleup, size=size.small)
plotshape(signal == -1, title="Sell Signal", location=location.abovebar, color=color.red, style=shape.triangledown, size=size.small)

// // Plot market condition markers
// plotshape(fastDrop, title="Fast Drop", location=location.abovebar, color=color.red, style=shape.circle, size=size.tiny)
// plotshape(mediumDrop, title="Medium Drop", location=location.abovebar, color=color.orange, style=shape.square, size=size.tiny)
// plotshape(slowDrop, title="Slow Drop", location=location.abovebar, color=color.yellow, style=shape.diamond, size=size.tiny)
// plotshape(growTooFast, title="Grow Too Fast", location=location.abovebar, color=color.blue, style=shape.triangleup, size=size.tiny)

// Background color for drop conditions
bgcolor(fastDrop ? color.new(color.red, 90) : mediumDrop ? color.new(color.orange, 90) : slowDrop ? color.new(color.yellow, 90) : na, title="Drop Background")

// Table to show current status
var table info_table = table.new(position.bottom_right, 3, 9, bgcolor=color.white, border_width=1)
if barstate.islast
    table.cell(info_table, 0, 0, "Metric", text_color=color.black, bgcolor=color.gray)
    table.cell(info_table, 1, 0, "Value", text_color=color.black, bgcolor=color.gray)
    table.cell(info_table, 2, 0, "Status", text_color=color.black, bgcolor=color.gray)
    
    table.cell(info_table, 0, 1, "Position", text_color=color.black)
    table.cell(info_table, 1, 1, strategy.position_size > 0 ? "Long" : "Cash", text_color=color.black)
    table.cell(info_table, 2, 1, strategy.position_size > 0 ? "✓" : "✗", 
               text_color=strategy.position_size > 0 ? color.green : color.red)
    
    table.cell(info_table, 0, 2, "Signal State", text_color=color.black)
    table.cell(info_table, 1, 2, signal_state, text_color=color.black)
    state_color = signal_state == "Buy" ? color.green : signal_state == "Sell" ? color.red : color.gray
    table.cell(info_table, 2, 2, signal_state == "Hold" ? "✓" : signal_state == "Buy" ? "▲" : signal_state == "Sell" ? "▼" : "○", text_color=state_color)
    
    table.cell(info_table, 0, 3, "QQQ vs SMA200", text_color=color.black)
    table.cell(info_table, 1, 3, str.tostring(math.round(qqq_close/sma200_qqq*100, 2)) + "%", text_color=color.black)
    table.cell(info_table, 2, 3, isAbove105SMA200 ? "✓" : isBelow90SMA200 ? "✗" : "○", 
               text_color=isAbove105SMA200 ? color.green : isBelow90SMA200 ? color.red : color.gray)
    
    table.cell(info_table, 0, 4, "Fast Drop", text_color=color.black)
    table.cell(info_table, 1, 4, fastDrop ? "Yes" : "No", text_color=color.black)
    table.cell(info_table, 2, 4, fastDrop ? "✗" : "✓", 
               text_color=fastDrop ? color.red : color.green)
    
    table.cell(info_table, 0, 5, "Medium Drop (TQQQ)", text_color=color.black)
    table.cell(info_table, 1, 5, str.tostring(math.round(tqqq_pullback_ratio*100, 1)) + "%", text_color=color.black)
    table.cell(info_table, 2, 5, mediumDrop ? "✗" : "✓", 
               text_color=mediumDrop ? color.red : color.green)
    
    table.cell(info_table, 0, 6, "Slow Drop", text_color=color.black)
    table.cell(info_table, 1, 6, slowDrop ? "Yes" : "No", text_color=color.black)
    table.cell(info_table, 2, 6, slowDrop ? "✗" : "✓", 
               text_color=slowDrop ? color.red : color.green)
    
    table.cell(info_table, 0, 7, "Grow Too Fast", text_color=color.black)
    table.cell(info_table, 1, 7, growTooFast ? "Yes" : "No", text_color=color.black)
    table.cell(info_table, 2, 7, growTooFast ? "✗" : "✓", 
               text_color=growTooFast ? color.red : color.green)
    
    table.cell(info_table, 0, 8, "VIX Level", text_color=color.black)
    vix_status = vix_close < 20 ? "Low Vol" : vix_close > 30 ? "High Vol" : "Normal"
    vix_status_color = vix_close < 20 ? color.green : vix_close > 30 ? color.red : color.gray
    table.cell(info_table, 1, 8, str.tostring(math.round(vix_close, 2)), text_color=color.black)
    table.cell(info_table, 2, 8, vix_status, text_color=vix_status_color)
